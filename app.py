from flask import Flask, request, abort
from linebot import LineBotApi, WebhookHandler
from linebot.exceptions import InvalidSignatureError
from linebot.models import MessageEvent, TextMessage, TextSendMessage, FollowEvent
import os, random, atexit
from apscheduler.schedulers.background import BackgroundScheduler

app = Flask(__name__)

from dotenv import load_dotenv
load_dotenv()

LINE_CHANNEL_ACCESS_TOKEN = os.getenv("LINE_CHANNEL_ACCESS_TOKEN")
LINE_CHANNEL_SECRET = os.getenv("LINE_CHANNEL_SECRET")

line_bot_api = LineBotApi(LINE_CHANNEL_ACCESS_TOKEN)
handler = WebhookHandler(LINE_CHANNEL_SECRET)

broadcast_active = False
tasbih_count = {}

# ---------------- ุงูุฃุฐูุงุฑ ูุงูุฃุฏุนูุฉ ----------------
adhkar = {
    "ุงุฐูุงุฑ ุงูุตุจุงุญ": "โ๏ธ ุฃุฐูุงุฑ ุงูุตุจุงุญ:\nุฃุตุจุญูุง ูุฃุตุจุญ ุงูููู ููู...",
    "ุงุฐูุงุฑ ุงููุณุงุก": "๐ ุฃุฐูุงุฑ ุงููุณุงุก:\nุฃูุณููุง ูุฃูุณู ุงูููู ููู...",
    "ุฏุนุงุก ุจุนุฏ ุงูุตูุงุฉ": "๐ ุฏุนุงุก ุจุนุฏ ุงูุตูุงุฉ:\nุฃุณุชุบูุฑ ุงููู (3 ูุฑุงุช)...",
    "ุฏุนุงุก ุงูููู": "๐ ุฏุนุงุก ุงูููู:\nุจุงุณูู ุฑุจู ูุถุนุช ุฌูุจู...",
    "ุฏุนุงุก ุงูุงุณุชููุงุธ": "๐ ุฏุนุงุก ุงูุงุณุชููุงุธ:\nุงูุญูุฏ ููู ุงูุฐู ุฃุญูุงูุง...",
    "ุฏุนุงุก ุงูุฌูุนุฉ": "ุงูููู ุงุฌุนููุง ูู ุงูููุจูููู ูู ููู ุงูุฌูุนุฉ...",
    "ุฏุนุงุก ุงูุณูุฑ": "ุงูููู ุฅูุง ูุณุฃูู ูู ุณูุฑูุง ูุฐุง ุงูุจุฑ ูุงูุชููู...",
    "ุฏุนุงุก ุฏุฎูู ุงููุณุฌุฏ": "ุงูููู ุงูุชุญ ูู ุฃุจูุงุจ ุฑุญูุชู.",
    "ุฏุนุงุก ุงูุฎุฑูุฌ ูู ุงููุณุฌุฏ": "ุงูููู ุฅูู ุฃุณุฃูู ูู ูุถูู.",
    "ุฏุนุงุก ุงูุฎุฑูุฌ ูู ุงูููุฒู": "ุจุณู ุงูููุ ุชูููุช ุนูู ุงูููุ ููุง ุญูู ููุง ููุฉ ุฅูุง ุจุงููู.",
    "ุฏุนุงุก ุงููุฑุจ": "ูุง ุฅูู ุฅูุง ุงููู ุงูุนุธูู ุงูุญููู...",
    "ุฏุนุงุก ุงูุงุณุชุฎุงุฑุฉ": "ุงูููู ุฅูู ุงุณุชุฎูุฑู ุจุนููู...",
    "ุฏุนุงุก ุงูุฑุฒู": "ุงูููู ุงุฑุฒููู ุฑุฒูุงู ุญูุงูุงู ุทูุจุงู..."
}

quran = {
    "ุณูุฑุฉ ุงููุงุชุญุฉ": "ุจุณู ุงููู ุงูุฑุญูู ุงูุฑุญูู...",
    "ุณูุฑุฉ ุงูููู": "ุงูุญูุฏ ููู ุงูุฐู ุฃูุฒู ุนูู ุนุจุฏู ุงููุชุงุจ...",
    "ุณูุฑุฉ ุงูููู": "ุชุจุงุฑู ุงูุฐู ุจูุฏู ุงูููู...",
    "ุขูุฉ ุงููุฑุณู": "ุงูููููู ููุง ุฅููููฐูู ุฅููููุง ูููู ุงููุญูููู ุงูููููููููู...",
    "ุงููุนูุฐุงุช": "ูููู ูููู ุงูููููู ุฃูุญูุฏู..."
}

ayat = ["ููููู ุฑููุจูู ุฒูุฏูููู ุนูููููุง", "ุฅูููู ููุนู ุงููุนูุณูุฑู ููุณูุฑูุง"]
ahadith = ["ูุงู ุงููุจู ๏ทบ: ุฎูุฑูู ูู ุชุนูู ุงููุฑุขู ูุนููู", "ูุงู ุงููุจู ๏ทบ: ุงููููุฉ ุงูุทูุจุฉ ุตุฏูุฉ"]
hikmah = ["ูู ุฌุฏ ูุฌุฏ ููู ุฒุฑุน ุญุตุฏ", "ุงูุนูู ููุฑ ููุฏู ุฅูู ุงูุญู"]

# ---------------- ุงููุดุฑ ุงูุชููุงุฆู ----------------
scheduler = BackgroundScheduler()

def send_morning_broadcast():
    if not broadcast_active:
        return
    text = adhkar["ุงุฐูุงุฑ ุงูุตุจุงุญ"] + "\n\n๐ ุขูุฉ ุงูููู:\n" + random.choice(ayat)
    try:
        line_bot_api.broadcast(TextSendMessage(text=text))
    except Exception as e:
        print("Error broadcasting morning:", e)

def send_evening_broadcast():
    if not broadcast_active:
        return
    text = adhkar["ุงุฐูุงุฑ ุงููุณุงุก"] + "\n\n๐ ุญุฏูุซ ุงูููู:\n" + random.choice(ahadith)
    try:
        line_bot_api.broadcast(TextSendMessage(text=text))
    except Exception as e:
        print("Error broadcasting evening:", e)

scheduler.add_job(send_morning_broadcast, "cron", hour=7, minute=0)
scheduler.add_job(send_evening_broadcast, "cron", hour=19, minute=0)
scheduler.start()
atexit.register(lambda: scheduler.shutdown())

WELCOME_TEXT = (
    "๐ ุฃููุงู ุจู ูู ุจูุช ุงูุฃุฐูุงุฑ ูุงููุฑุขู ๐\n\n"
    "๐ ุงูุฃูุงูุฑ:\n"
    "- ุงุฐูุงุฑ ุงูุตุจุงุญ / ุงุฐูุงุฑ ุงููุณุงุก / ุฏุนุงุก ุงูููู / ุฏุนุงุก ุงูุงุณุชููุงุธ / ุฏุนุงุก ุจุนุฏ ุงูุตูุงุฉ\n"
    "- ุฏุนุงุก ุงูุฌูุนุฉ / ุฏุนุงุก ุงูุณูุฑ / ุฏุนุงุก ุฏุฎูู ุงููุณุฌุฏ / ุฏุนุงุก ุงูุฎุฑูุฌ ูู ุงููุณุฌุฏ / ุฏุนุงุก ุงูุฎุฑูุฌ ูู ุงูููุฒู\n"
    "- ุฏุนุงุก ุงููุฑุจ / ุฏุนุงุก ุงูุงุณุชุฎุงุฑุฉ / ุฏุนุงุก ุงูุฑุฒู\n"
    "- ุณูุฑุฉ ุงููุงุชุญุฉ / ุณูุฑุฉ ุงูููู / ุณูุฑุฉ ุงูููู / ุขูุฉ ุงููุฑุณู / ุงููุนูุฐุงุช\n"
    "- ุขูุฉ ุงูููู / ุญุฏูุซ ุงูููู / ุญููุฉ ุงูููู\n"
    "- ุงูุชุณุจูุญ: ุณุจุญุงู ุงููู / ุงูุญูุฏ ููู / ุงููู ุฃูุจุฑ\n"
    "- ุชุดุบูู / ุงููุงู / ูุณุงุนุฏุฉ"
)

@handler.add(FollowEvent)
def handle_follow(event):
    try:
        line_bot_api.reply_message(event.reply_token, TextSendMessage(text=WELCOME_TEXT))
    except Exception as e:
        print("FollowEvent error:", e)

@app.route("/callback", methods=["POST"])
def callback():
    signature = request.headers.get("X-Line-Signature", "")
    body = request.get_data(as_text=True)
    try:
        handler.handle(body, signature)
    except InvalidSignatureError:
        abort(400)
    return "OK"

@handler.add(MessageEvent, message=TextMessage)
def handle_message(event):
    global broadcast_active, tasbih_count
    text = event.message.text.strip()
    user_id = getattr(event.source, "user_id", None)

    if text == "ุงููุงู":
        broadcast_active = False
        reply = "๐ซ ุชู ุฅููุงู ุงููุดุฑ ุงูุชููุงุฆู."
    elif text in ["ุชุดุบูู", "ุชูุนูู"]:
        broadcast_active = True
        reply = "โ ุชู ุชูุนูู ุงููุดุฑ ุงูุชููุงุฆู (ุฃุฐูุงุฑ ุงูุตุจุงุญ 7:00ุ ุงููุณุงุก 19:00)."
    elif text == "ูุณุงุนุฏุฉ":
        reply = WELCOME_TEXT
    elif text in adhkar:
        reply = adhkar[text]
    elif text in quran:
        reply = quran[text]
    elif text == "ุขูุฉ ุงูููู":
        reply = random.choice(ayat)
    elif text == "ุญุฏูุซ ุงูููู":
        reply = random.choice(ahadith)
    elif text == "ุญููุฉ ุงูููู":
        reply = random.choice(hikmah)
    elif text in ["ุณุจุญุงู ุงููู", "ุงูุญูุฏ ููู", "ุงููู ุฃูุจุฑ"]:
        if user_id:
            tasbih_count.setdefault(user_id, 0)
            tasbih_count[user_id] += 1
            reply = f"{text} ({tasbih_count[user_id]})"
        else:
            reply = text
    else:
        reply = "โ ูู ุฃููู ุงูุฃูุฑ. ุงูุชุจ (ูุณุงุนุฏุฉ) ูุนุฑุถ ุงูุฃูุงูุฑ."

    try:
        line_bot_api.reply_message(event.reply_token, TextSendMessage(text=reply))
    except Exception as e:
        print("reply error:", e)

if __name__ == "__main__":
    port = int(os.environ.get("PORT", 5000))
    app.run(host="0.0.0.0", port=port)
